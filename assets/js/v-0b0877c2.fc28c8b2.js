"use strict";(self.webpackChunkifs_shanghai_doc=self.webpackChunkifs_shanghai_doc||[]).push([[461],{7033:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-0b0877c2",path:"/zh/eb_xelor/user_guide/hypervisor.html",title:"EB corbos Hypervisor",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"获取镜像文件",slug:"获取镜像文件",children:[]},{level:2,title:"各个文件的描述",slug:"各个文件的描述",children:[]},{level:2,title:"配置",slug:"配置",children:[{level:3,title:"EB corbos Linux hostname",slug:"eb-corbos-linux-hostname",children:[]},{level:3,title:"Hypervisor's vm1 bridge's IP",slug:"hypervisor-s-vm1-bridge-s-ip",children:[]},{level:3,title:"vm-hub hostname",slug:"vm-hub-hostname",children:[]},{level:3,title:"使用方法",slug:"使用方法",children:[]}]},{level:2,title:"烧写到 H3",slug:"烧写到-h3",children:[]}],filePathRelative:"zh/eb_xelor/user_guide/hypervisor.md",git:{updatedTime:1633097608e3,contributors:[{name:"Qian Chen",email:"827391449@qq.com",commits:2}]}}},3956:(e,n,s)=>{s.r(n),s.d(n,{default:()=>x});var a=s(6252);const r=(0,a._)("h1",{id:"eb-corbos-hypervisor",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#eb-corbos-hypervisor","aria-hidden":"true"},"#"),(0,a.Uk)(" EB corbos Hypervisor")],-1),i=(0,a._)("p",null,"EB xelor 提供 EB corbos Hypervisor bin文件的Conan包。",-1),l=(0,a._)("h2",{id:"获取镜像文件",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#获取镜像文件","aria-hidden":"true"},"#"),(0,a.Uk)(" 获取镜像文件")],-1),t=(0,a._)("strong",null,"前提条件:",-1),o=(0,a.Uk)(" + 已安装Conan, 详细请参考 "),c=(0,a.Uk)("Docker"),p=(0,a.Uk)("."),d=(0,a.Uk)("如果不用 "),b=(0,a.Uk)("Valeria"),u=(0,a.Uk)(" 来构建, 需要注意的是Conan profile使用conan user和connan channel。 你需要在 "),m=(0,a._)("code",null,"config/valeria/r-car-h3/profiles",-1),h=(0,a.Uk)(" 目录下创建 "),v=(0,a._)("code",null,"get_user_channel",-1),g=(0,a.Uk)(" 文件并指定user 和 channel。 例如："),f=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>CONAN_USER=EBxelor\nCONAN_CHANNEL=2020.12\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Step 1<br> 在EB xelor artifactory中搜索所有EB corbos Hypervisor的包.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>conan search -r eb_core-releases eb_hypervisor*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Step 2<br> 创建空白目录并从EB xelor artifactory获取镜像文件</p><p>For R-Car-H3:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mkdir hypervisor\ncd hypervisor\nconan install \\\n--profile:host=\\\n/workdir/EBxelor-2020.12/config/valeria/r-car-h3/profiles/host/A5x \\\n--profile:build=\\\n/workdir/EBxelor-2020.12/config/valeria/r-car-h3/profiles/build/linux_x86_64 \\\n--profile:build=\\\n/workdir/EBxelor-2020.12/config/valeria/r-car-h3/profiles/build/soc_specific \\\n-r eb_core-releases eb_hypervisor/0.3.1@EBxelor/2020.12\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>For NXP S32G:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mkdir hypervisor\ncd hypervisor\nconan install \\\n--profile:host=\\\n/workdir/EBxelor-2020.12/config/valeria/s32g/profiles/host/A53 \\\n--profile:build=\\\n/workdir/EBxelor-2020.12/config/valeria/s32g/profiles/build/linux_x86_64 \\\n--profile:build=\\\n/workdir/EBxelor-2020.12/config/valeria/s32g/profiles/build/soc_specific \\\n-r eb_core-releases eb_hypervisor/0.3.1@EBxelor/2020.12\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>现在， <code>hypervisor/eb_hypervisor_r-car-h3/</code> 目录将包含这些文件：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>EBcore-boot.img\nEBcore-containers.img\nEBcore-data.img\nEBcore-rootfs.img\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="各个文件的描述" tabindex="-1"><a class="header-anchor" href="#各个文件的描述" aria-hidden="true">#</a> 各个文件的描述</h2><table><thead><tr><th>文件</th><th>描述</th></tr></thead><tbody><tr><td>EBcore-boot.img</td><td>Contains bootstrap.uimage. Used if the hypervisor is started form emmc</td></tr><tr><td>EBcore-rootfs.img</td><td>Root file system for VM2 and VM3 running on EB corbos Linux</td></tr><tr><td>EBcore-containers.img</td><td>Container partitions for VM2 and VM3</td></tr><tr><td>EBcore-data.img</td><td>Data partitions for VM2 and VM3</td></tr></tbody></table><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><h3 id="eb-corbos-linux-hostname" tabindex="-1"><a class="header-anchor" href="#eb-corbos-linux-hostname" aria-hidden="true">#</a> EB corbos Linux hostname</h3><p>修改文件: <code>pkg/eb_hypervisor/config/setup_vm.ned</code>. Hostname 在这些行中定义 (当前名称为 EBcore-vm-alpha 和 EBcore-vm-beta):</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>local vm_2_bootargs = &quot; root=/dev/vda rootwait ro hostname=ebcore-vm-alpha&quot; ..\n\nlocal vm_3_bootargs = &quot; root=/dev/vda rootwait ro hostname=ebcore-vm-beta&quot; ..\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="hypervisor-s-vm1-bridge-s-ip" tabindex="-1"><a class="header-anchor" href="#hypervisor-s-vm1-bridge-s-ip" aria-hidden="true">#</a> Hypervisor&#39;s vm1 bridge&#39;s IP</h3><p>Mount ramdisk</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> /mnt/hv_ramdisk\n<span class="token function">sudo</span> <span class="token function">mount</span> pkg/eb_hypervisor/config/ramdisk-vm.rd <span class="token punctuation">\\</span>\n  /mnt/hv_ramdisk\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Change IP address in file:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">nano</span> /mnt/hv_ramdisk/etc/network/interfaces-bridge\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Save and umount</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">umount</span> /mnt/hv_ramdisk\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="vm-hub-hostname" tabindex="-1"><a class="header-anchor" href="#vm-hub-hostname" aria-hidden="true">#</a> vm-hub hostname</h3><p>Mount ramdisk</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> /mnt/hv_ramdisk\n<span class="token function">sudo</span> <span class="token function">mount</span> pkg/eb_hypervisor/config/ramdisk-vm.rd <span class="token punctuation">\\</span>\n  /mnt/hv_ramdisk\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Change vm-hub hostname in file:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">nano</span> /mnt/hv_ramdisk/etc/hostname\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Save and umount</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">umount</span> /mnt/hv_ramdisk\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h3><p>Hypervisor 支持下列键盘命令:</p><table><thead><tr><th>命令</th><th>动作</th></tr></thead><tbody><tr><td>Ctrl-E .</td><td>Disconnect (goes to Hypervisor console)</td></tr><tr><td>Ctrl-E 1</td><td>Connect to console &#39;vm1&#39; (vm-hub)</td></tr><tr><td>Ctrl-E 2</td><td>Connect to console &#39;vm2&#39; (ebcore-vm-alpha)</td></tr><tr><td>Ctrl-E 3</td><td>Connect to console &#39;vm3&#39; (ebcore-vm-beta)</td></tr></tbody></table><h2 id="烧写到-h3" tabindex="-1"><a class="header-anchor" href="#烧写到-h3" aria-hidden="true">#</a> 烧写到 H3</h2><p>Subject to change. Flashing will be changed in some point, but currently flashing contains two separate steps.</p><p>Step 1<br> Hardware needs to be prepared for flashing. Make sure that you have the latest u-boot, which supports fastboot (can be found in EB xelor artifactory).</p><p>Stop u-boot, and give following commands:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>setenv vm2_partition &#39;name=boot,start=1MiB,size=50MiB;name=rootfs, \\\n  size=64MiB;name=data,size=480MiB;name=containers,size=512MiB;&#39;\nsetenv vm3_partition &#39;name=rootfs2,size=64MiB;name=data2, \\\n  size=480MiB;name=containers2,size=512MiB;&#39;\nsetenv partitions $vm2_partition$vm3_partition\nsetenv bootcmd &#39;ext4load mmc 1:1 0x50FFFFC0 bootstrap.uimage; bootm 0x50FFFFC0&#39;\nsaveenv\n\nfastboot udp\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Output should be like that:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Using ethernet@e6800000 device\nListening for fastboot command on 192.168.7.14\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Step 2<br> Goto directory were the hypervisor binaries where installed</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> hypervisor/eb_hypervisor_r-car-h3/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Give <code>./flash_emmc.sh &lt;ip-address&gt;</code> command. ip-address is the same as the one hw is listening to, see output from Step 1.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>./flash_emmc.sh <span class="token number">192.168</span>.7.14\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>After flashing script is done, hardware should boot automatically to hypervisor. And the user can login to VM&#39;s:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>vm2     :\nvm2     | corbos 1.13.0 EBcore-vm2 hvc1\nvm2     |\nvm2     | EBcore-vm2 login:\nvm1     : [   10.390488] ravb e6800000.ethernet eth2: Link is Up -\n                                        100Mbps/Full - flow control rx/tx\nvm1     | [   10.403145] IPv6: ADDRCONF(NETDEV_CHANGE): eth2: link becomes ready\nvm1     | [   10.413330] br0: port 3(eth2) entered blocking state\nvm1     | [   10.421371] br0: port 3(eth2) entered forwarding state\nvm3     |\nvm3     | corbos 1.13.0 EBcore-vm3 hvc0\nvm3     |\nvm3     |\nvm3     | corbos 1.13.0 EBcore-vm3 hvc1\nvm3     |\nvm3     | EBcore-vm3 login:\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>',46),x={render:function(e,n){const s=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[r,i,l,(0,a._)("p",null,[t,o,(0,a.Wm)(s,{to:"/zh/eb_xelor/user_guide/docker.html"},{default:(0,a.w5)((()=>[c])),_:1}),p]),(0,a._)("p",null,[d,(0,a.Wm)(s,{to:"/zh/eb_xelor/user_guide/valeria.html"},{default:(0,a.w5)((()=>[b])),_:1}),u,m,h,v,g]),f],64)}}}}]);