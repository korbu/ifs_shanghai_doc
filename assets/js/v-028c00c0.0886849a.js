"use strict";(self.webpackChunkifs_shanghai_doc=self.webpackChunkifs_shanghai_doc||[]).push([[949],{9435:(e,a,r)=>{r.r(a),r.d(a,{data:()=>s});const s={key:"v-028c00c0",path:"/zh/eb_corbos_starterkit/demo_ara_com.html",title:"交通信号场景模拟应用",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"准备Demo(命令行操作)",slug:"准备demo-命令行操作",children:[]},{level:2,title:"导入工程",slug:"导入工程",children:[{level:3,title:"命令行操作",slug:"命令行操作",children:[]},{level:3,title:"UI界面操作",slug:"ui界面操作",children:[]},{level:3,title:"目录结构介绍",slug:"目录结构介绍",children:[]}]},{level:2,title:"运行与ADG相关的pluget",slug:"运行与adg相关的pluget",children:[{level:3,title:"命令行操作",slug:"命令行操作-1",children:[]},{level:3,title:"UI界面操作",slug:"ui界面操作-1",children:[]}]},{level:2,title:"编译工程",slug:"编译工程",children:[{level:3,title:"命令行操作",slug:"命令行操作-2",children:[]},{level:3,title:"UI界面操作",slug:"ui界面操作-2",children:[]}]},{level:2,title:"把编译好的工程封装进Container",slug:"把编译好的工程封装进container",children:[{level:3,title:"命令行操作",slug:"命令行操作-3",children:[]},{level:3,title:"UI界面操作",slug:"ui界面操作-3",children:[]}]},{level:2,title:"启动qemu",slug:"启动qemu",children:[{level:3,title:"命令行操作",slug:"命令行操作-4",children:[]}]},{level:2,title:"登陆qemu",slug:"登陆qemu",children:[{level:3,title:"命令行操作",slug:"命令行操作-5",children:[]}]},{level:2,title:"部署container到qemu",slug:"部署container到qemu",children:[{level:3,title:"命令行操作",slug:"命令行操作-6",children:[]},{level:3,title:"UI界面操作",slug:"ui界面操作-4",children:[]}]},{level:2,title:"部署配置文件到qemu",slug:"部署配置文件到qemu",children:[{level:3,title:"命令行操作",slug:"命令行操作-7",children:[]},{level:3,title:"UI界面操作",slug:"ui界面操作-5",children:[]}]},{level:2,title:"执行程序",slug:"执行程序",children:[{level:3,title:"命令行操作",slug:"命令行操作-8",children:[]},{level:3,title:"UI界面操作",slug:"ui界面操作-6",children:[]}]},{level:2,title:"停止qemu",slug:"停止qemu",children:[{level:3,title:"命令行操作",slug:"命令行操作-9",children:[]}]}],filePathRelative:"zh/eb_corbos_starterkit/demo_ara_com.md",git:{updatedTime:1632147602e3,contributors:[{name:"Qian Chen",email:"KimChan2013@users.noreply.github.com",commits:2},{name:"Kim Chan",email:"KimChan2013@users.noreply.github.com",commits:1}]}}},399:(e,a,r)=>{r.r(a),r.d(a,{default:()=>Z});var s=r(6252);const n=(0,s.uE)('<h1 id="交通信号场景模拟应用" tabindex="-1"><a class="header-anchor" href="#交通信号场景模拟应用" aria-hidden="true">#</a> 交通信号场景模拟应用</h1><p>本应用包含以下Demo：</p><table><thead><tr><th>名称</th><th>功能</th><th>相关模块</th></tr></thead><tbody><tr><td>Sensor_handler</td><td>TBD</td><td>ara:Com, ara:EM, ara:PM, ara:Phm</td></tr><tr><td>Sensor_Preprocessor</td><td>TBD</td><td>ara:Com, ara:EM, ara:Phm</td></tr><tr><td>Sensor_Manager</td><td>TBD</td><td>ara:Com, ara:EM, ara:Phm</td></tr><tr><td>Sensor_dataProcessor</td><td>TBD</td><td>ara:Com, ara:EM, ara:PM</td></tr><tr><td>Display_Manager</td><td>TBD</td><td>ara:Com, ara:EM</td></tr><tr><td>phm_callback</td><td>TBD</td><td>ara:EM</td></tr></tbody></table>',3),l=["src"],i=(0,s.uE)('<h2 id="准备demo-命令行操作" tabindex="-1"><a class="header-anchor" href="#准备demo-命令行操作" aria-hidden="true">#</a> 准备Demo(命令行操作)</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli Application --generate-cmake --app ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/ --target-os eblinux --target-platform qemu-x86 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="导入工程" tabindex="-1"><a class="header-anchor" href="#导入工程" aria-hidden="true">#</a> 导入工程</h2><h3 id="命令行操作" tabindex="-1"><a class="header-anchor" href="#命令行操作" aria-hidden="true">#</a> 命令行操作</h3><p>如全程使用命令行操作，此步骤不需要。</p><h3 id="ui界面操作" tabindex="-1"><a class="header-anchor" href="#ui界面操作" aria-hidden="true">#</a> UI界面操作</h3>',6),t=(0,s._)("li",null,"File->import",-1),o=(0,s.Uk)("Select an import wizard: General/Existing Projects into Workspace "),c=["src"],d=(0,s._)("li",null,[(0,s.Uk)("Select root directory: "),(0,s._)("code",null,"~/ara/eb/workspace/adg/demo/Sensor_Preprocessor")],-1),u=(0,s.Uk)("Copy project into workspace选项在项目不在workspace目录的时候需要选中 "),p=["src"],h=(0,s._)("h3",{id:"目录结构介绍",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#目录结构介绍","aria-hidden":"true"},"#"),(0,s.Uk)(" 目录结构介绍")],-1),m=(0,s._)("li",null,"Build Targets： 里面是一些编译操作",-1),g=(0,s._)("li",null,"Includes： 是依赖的第三方头文件和我们ADG的头文件",-1),b=(0,s._)("li",null,"Impl：是我们需要实现功能的代码路径",-1),_=(0,s._)("li",null,"Launch： 是ContainerDeploy到qemu之后，提供run和debug操作",-1),v=(0,s._)("li",null,"Model： 放的是该工程依赖ADG的arxml配置文件",-1),k=(0,s._)("li",null,"Plugets： 里的插件可以让我们根据model里的arxml生成配置文件或者代码，具体可以看user guide",-1),x=(0,s.Uk)("Test： 里放的是单元测试代码 "),f=["src"],S=(0,s.uE)('<h2 id="运行与adg相关的pluget" tabindex="-1"><a class="header-anchor" href="#运行与adg相关的pluget" aria-hidden="true">#</a> 运行与ADG相关的pluget</h2><ul><li>必要插件：araEmManifestGen.pluget, araComBindingGenerator.pluget</li><li>Sensor_dataProcessor， Sensor_handler需要araPmManifestGen.pluget插件 +</li><li>跨VM的Sensor_handler ,Sensor_Preprocessor需要araComManifestGenerator插件 +</li></ul><h3 id="命令行操作-1" tabindex="-1"><a class="header-anchor" href="#命令行操作-1" aria-hidden="true">#</a> 命令行操作</h3><p>--EM相关—</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli RunPluget --name araEmManifestGen.pluget <span class="token punctuation">\\</span>\n--input  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/ <span class="token punctuation">\\</span>\n--output ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>--Com相关—</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli RunPluget --name AraComBindingGenerator.pluget <span class="token punctuation">\\</span>\n--input  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/ <span class="token punctuation">\\</span>\n--output  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>--Com配置文件—</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli RunPluget --name AraComManifestGenerator.pluget <span class="token punctuation">\\</span>\n--input  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/ <span class="token punctuation">\\</span>\n--output  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>--PM相关—</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli RunPluget --name araPmManifestGen.pluget <span class="token punctuation">\\</span>\n--input  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/ <span class="token punctuation">\\</span>\n--output  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="ui界面操作-1" tabindex="-1"><a class="header-anchor" href="#ui界面操作-1" aria-hidden="true">#</a> UI界面操作</h3>',12),P=(0,s.Uk)("执行AraComBindingGenerator.pluget,点击OK "),w=["src"],q=(0,s.Uk)(" 此步骤会在generated文件夹下生成代码，给Service或Client使用 "),C=["src"],M=(0,s.Uk)("执行AraComManifestGenerator.pluget,点击OK"),B=(0,s._)("br",null,null,-1),U=(0,s.Uk)(" 此步骤会在generated下生成config文件夹，里面有sensor_preprocessor_someip_machine1.json文件 "),D=["src"],y=(0,s.Uk)("执行araEmManifestGen,点击OK"),E=(0,s._)("br",null,null,-1),G=(0,s.Uk)(" 此步骤会在generated文件夹生成EM相关的配置文件 "),A=["src"],I=(0,s.uE)('<h2 id="编译工程" tabindex="-1"><a class="header-anchor" href="#编译工程" aria-hidden="true">#</a> 编译工程</h2><h3 id="命令行操作-2" tabindex="-1"><a class="header-anchor" href="#命令行操作-2" aria-hidden="true">#</a> 命令行操作</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli Application --app  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/ --target-os eblinux --target-platform qemu-x86\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="ui界面操作-2" tabindex="-1"><a class="header-anchor" href="#ui界面操作-2" aria-hidden="true">#</a> UI界面操作</h3><p>点击Build Targets/ Build</p><h2 id="把编译好的工程封装进container" tabindex="-1"><a class="header-anchor" href="#把编译好的工程封装进container" aria-hidden="true">#</a> 把编译好的工程封装进Container</h2><h3 id="命令行操作-3" tabindex="-1"><a class="header-anchor" href="#命令行操作-3" aria-hidden="true">#</a> 命令行操作</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli CreateAppContainer --app-dir  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/ <span class="token punctuation">\\</span>\n--config-dir  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/generated <span class="token punctuation">\\</span>\n--container-dir  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/container\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="ui界面操作-3" tabindex="-1"><a class="header-anchor" href="#ui界面操作-3" aria-hidden="true">#</a> UI界面操作</h3><p>点击<code>Build Targets/CreateAppContainer</code></p><h2 id="启动qemu" tabindex="-1"><a class="header-anchor" href="#启动qemu" aria-hidden="true">#</a> 启动qemu</h2><ul><li>qemu1: Sensor_Preprocessor, Sensor_Manager, Sensor_dataProcessor, Display_Manager</li><li>qemu2: Sensor_handler</li></ul><div class="custom-container tip"><p class="custom-container-title">注意</p><p>下文命令行中数字1皆代表qemu1.</p></div><h3 id="命令行操作-4" tabindex="-1"><a class="header-anchor" href="#命令行操作-4" aria-hidden="true">#</a> 命令行操作</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-network -a -N <span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',15),T=["src"],$=(0,s.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli RunQemu --start <span class="token number">1</span> --target-os eblinux\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',1),j=(0,s.Uk)("若执行失败，再次执行即可 "),R=["src"],K=(0,s.uE)('<h2 id="登陆qemu" tabindex="-1"><a class="header-anchor" href="#登陆qemu" aria-hidden="true">#</a> 登陆qemu</h2><h3 id="命令行操作-5" tabindex="-1"><a class="header-anchor" href="#命令行操作-5" aria-hidden="true">#</a> 命令行操作</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ssh</span> -o <span class="token assign-left variable">StrictHostKeyChecking</span><span class="token operator">=</span>no root@fd00::eb:1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="部署container到qemu" tabindex="-1"><a class="header-anchor" href="#部署container到qemu" aria-hidden="true">#</a> 部署container到qemu</h2><h3 id="命令行操作-6" tabindex="-1"><a class="header-anchor" href="#命令行操作-6" aria-hidden="true">#</a> 命令行操作</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli DeployAppContainer --app-dir  ~/ara/eb/workspace/adg/demo/Sensor_Preprocessor/ --target-host root@fd00::eb:1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="ui界面操作-4" tabindex="-1"><a class="header-anchor" href="#ui界面操作-4" aria-hidden="true">#</a> UI界面操作</h3><p>点击Build Targets/DeployAppContainer</p><h2 id="部署配置文件到qemu" tabindex="-1"><a class="header-anchor" href="#部署配置文件到qemu" aria-hidden="true">#</a> 部署配置文件到qemu</h2><p>Sensor_handler和Sensor_Preprocessor需要Deploy Target File,之后可以在qemu1和qemu2 之间通信。 + 此步骤会把json文件deploy到qemu里，路径为 <code>/etc/adaptive/ara_Com/daemon_1/sensor_preprocessor_someip_machine1.json</code></p><h3 id="命令行操作-7" tabindex="-1"><a class="header-anchor" href="#命令行操作-7" aria-hidden="true">#</a> 命令行操作</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli TargetOperation --app-dir ./Sensor_Preprocessor\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="ui界面操作-5" tabindex="-1"><a class="header-anchor" href="#ui界面操作-5" aria-hidden="true">#</a> UI界面操作</h3><p>点击Build Targets/DeployTargetFiles</p><h2 id="执行程序" tabindex="-1"><a class="header-anchor" href="#执行程序" aria-hidden="true">#</a> 执行程序</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>runc list\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',16),Q=(0,s.Uk)("Qemu1: "),z=["src"],F=(0,s.Uk)("Qemu2: "),O=["src"],H=(0,s.uE)('<h3 id="命令行操作-8" tabindex="-1"><a class="header-anchor" href="#命令行操作-8" aria-hidden="true">#</a> 命令行操作</h3><p>Qemu1:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>runc <span class="token builtin class-name">exec</span> Sensor_Preprocessor /opt/Sensor_Preprocessor/bin/Sensor_Preprocessor\nrunc <span class="token builtin class-name">exec</span> Sensor_Manager /opt/Sensor_Manager/bin/Sensor_Manager\nrunc <span class="token builtin class-name">exec</span> Sensor_dataProcessor /opt/Sensor_dataProcessor/bin/Sensor_dataProcessor\nrunc <span class="token builtin class-name">exec</span> Display_Manager /opt/Display_Manager/bin/Display_Manager\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Qemu2:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>runc <span class="token builtin class-name">exec</span> Sensor_handler /opt/Sensor_handler/bin/Sensor_handler\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>左1：Displayer_Manager</li><li>左2：Sensor_Manager</li><li>左3：Sensor_dataProcessor</li><li>右1：Sensor_Preprocessor，在Sensor_handler没起之前,FindService结果为0，否则为1</li><li>右2：Sensor_handler</li></ul>',6),N=["src"],W=["src"],L=(0,s._)("h3",{id:"ui界面操作-6",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#ui界面操作-6","aria-hidden":"true"},"#"),(0,s.Uk)(" UI界面操作")],-1),V=(0,s._)("p",null,[(0,s.Uk)("右击/launch/Sensor_Preprocessor_run.launch -> Run As -> Sensor_Preprocessor_run"),(0,s._)("br"),(0,s.Uk)(" 弹窗点击yes，会在Console看到程序的log。")],-1),Y=["src"],J=["src"],X=(0,s.uE)('<h2 id="停止qemu" tabindex="-1"><a class="header-anchor" href="#停止qemu" aria-hidden="true">#</a> 停止qemu</h2><h3 id="命令行操作-9" tabindex="-1"><a class="header-anchor" href="#命令行操作-9" aria-hidden="true">#</a> 命令行操作</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ara-cli RunQemu --stop <span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),Z={render:function(e,a){return(0,s.wg)(),(0,s.iD)(s.HY,null,[n,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/architecture.png"),alt:"交通信号场景演示程序架构图"},null,8,l),i,(0,s._)("ol",null,[t,(0,s._)("li",null,[o,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/import_project.png"),alt:"General/Existing Projects into Workspace"},null,8,c)]),d,(0,s._)("li",null,[u,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/select_root_directory.png"),alt:"Copy project into workspace"},null,8,p)])]),h,(0,s._)("ul",null,[m,g,b,_,v,k,(0,s._)("li",null,[x,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/folder_structure.png"),alt:"目录结构"},null,8,f)])]),S,(0,s._)("p",null,[P,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/execute_pluget_AraComBindingGenerator.png"),alt:"执行AraComBindingGenerator"},null,8,w),q,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/generate_code.png"),alt:"generate_code"},null,8,C)]),(0,s._)("p",null,[M,B,U,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/execute_pluget_AraComManifestGenerator.png"),alt:"执行AraComManifestGenerator"},null,8,D)]),(0,s._)("p",null,[y,E,G,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/execute_pluget_araEmManifestGen.png"),alt:"执行araEmManifestGen"},null,8,A)]),I,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/network_bridge.png"),alt:"network_bridge"},null,8,T),$,(0,s._)("p",null,[j,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/run_qemu.png"),alt:"run_qemu"},null,8,R)]),K,(0,s._)("p",null,[Q,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/runc_list_qemu1.png"),alt:"runc_list_qemu1"},null,8,z)]),(0,s._)("p",null,[F,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/runc_list_qemu2.png"),alt:"runc_list_qemu2"},null,8,O)]),H,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/communication_processes.png"),alt:"communication_processes"},null,8,N),(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/demo_logo.png"),alt:"demo_logo"},null,8,W),L,V,(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/Sensor_Preprocessor_run.png"),alt:"Sensor_Preprocessor_run"},null,8,Y),(0,s._)("img",{src:e.$withBase("/images/eb_corbos_starterkit/demo_ara_com/Sensor_Preprocessor_log.png"),alt:"Sensor_Preprocessor_log"},null,8,J),X],64)}}}}]);