"use strict";(self.webpackChunkifs_shanghai_doc=self.webpackChunkifs_shanghai_doc||[]).push([[5],{6170:(e,o,n)=>{n.r(o),n.d(o,{data:()=>r});const r={key:"v-12dc8a59",path:"/zh/eb_xelor/user_guide/docker.html",title:"Docker",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"概述",slug:"概述",children:[]},{level:2,title:"安装并运行EB xelor docker容器",slug:"安装并运行eb-xelor-docker容器",children:[]},{level:2,title:"目录结构",slug:"目录结构",children:[]},{level:2,title:"Troubleshooting",slug:"troubleshooting",children:[]}],filePathRelative:"zh/eb_xelor/user_guide/docker.md",git:{updatedTime:1632316233e3,contributors:[{name:"Qian Chen",email:"KimChan2013@users.noreply.github.com",commits:1}]}}},3339:(e,o,n)=>{n.r(o),n.d(o,{default:()=>b});var r=n(6252);const s=(0,r.uE)('<h1 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>EB xelor提供docker容器以用来开发并构建EB xelor交付物，容器基于(Yocto Project/OECore tools) 和 Ubuntu 18.04，包含基本的开发工具，例如python3，git，git-lfs，repo tool，Conan等。</p><p>容器文件dockerfile位于 <code>config/docker/Dockerfile</code> 。</p><h2 id="安装并运行eb-xelor-docker容器" tabindex="-1"><a class="header-anchor" href="#安装并运行eb-xelor-docker容器" aria-hidden="true">#</a> 安装并运行EB xelor docker容器</h2><p>前提条件:</p><ul><li>Linux机器或运行Linux的虚拟机。我们使用的是Ubuntu。</li></ul><p>安装步骤</p>',8),t=(0,r.uE)('<li><p>Step 1<br> 安装Docker CE: https://docs.docker.com/install/linux/docker-ce/ubuntu/</p><p>创建组，并将你的用户名添加到组中:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">groupadd</span> docker\n<span class="token function">sudo</span> <span class="token function">usermod</span> -aG docker <span class="token environment constant">$USER</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>注销登陆/重启后，运行 <code>docker run hello-world</code> 测试是否安装成功。</p></li>',1),a=(0,r.Uk)("Step 2"),c=(0,r._)("br",null,null,-1),l=(0,r.Uk)(" 获取EB xelor代码, 请参阅 "),d={href:"/obtain.md",target:"_blank",rel:"noopener noreferrer"},i=(0,r.Uk)("获取EB xelor"),u=(0,r.Uk)("."),p=(0,r._)("li",null,[(0,r._)("p",null,"Step 3 运行EB xelor docker容器"),(0,r._)("p",null,"如果没有EB xelor docker镜像，可以通过运行这个脚本自动创建:"),(0,r._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,r._)("pre",{class:"language-bash"},[(0,r._)("code",null,"tools/docker/run_docker.sh\n")]),(0,r._)("div",{class:"line-numbers"},[(0,r._)("span",{class:"line-number"},"1"),(0,r._)("br")])]),(0,r._)("p",null,[(0,r.Uk)("创建镜像后，"),(0,r._)("code",null,"run_docker.sh"),(0,r.Uk)("会检查各项配置并在命令行中报告发现的问题。")])],-1),h=(0,r.uE)('<p><code>run_docker.sh</code>脚本的配置和信息</p><table><thead><tr><th>信息</th><th>说明</th><th>解决办法</th></tr></thead><tbody><tr><td>ACTION NEEDED: Git commit template is missing on host</td><td>EB xelor使用commit模板，脚本会检查git client是否配置并使用了这个模板</td><td>如果你需要向EB xelor提交源代码，你应当安装git commit模板，如果不需要，那么可以忽略这个信息</td></tr><tr><td>SETUP: Set/update Conan authentication for remote(s) (Artifactory)</td><td>脚本根据 <code>config/conan/config</code> 安装conan配置，并验证是否有权限访问Artifactory仓库</td><td>提供凭证信息。如果你使用不同的Artifactory仓库，你应该修改 <code>config/conan/config/remotes.txt</code> 文件</td></tr><tr><td>SETUP: JFrog configuration needed, host is missing file</td><td>我们使用JFrog命令行客户端从Artifactory仓库下载文件</td><td>根据提示输入凭证信息，只需要输入用户名和密码，其他提示问题可以使用默认值</td></tr></tbody></table><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h2><p>在EB xelor docker容器中，<code>/workdir</code>映射到的是你运行<code>run_docker.sh</code>的路径.</p><p><code>run_docker.sh</code>会在这个文件夹下创建Conan缓存(<code>.conan</code> directory)，即<code>/workdir/.conan</code>。因此，最好不要在源码路径运行这个脚本。</p><p>示例如下 (以克隆EBcore-main仓库为例):</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> ebxelor\n<span class="token builtin class-name">cd</span> ebxelor\n<span class="token function">git</span> clone git@gitext.elektrobitautomotive.com:EBcore/EBcore-main.git\n./EBcore-main/tools/docker/run_docker.sh\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Conan cache目录在<code>ebxelor/.conan</code>，对应的docker容器中路径是<code>/workdir/.conan</code>。</p><h2 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting" aria-hidden="true">#</a> Troubleshooting</h2><div class="custom-container tip"><p class="custom-container-title">提示</p><p>源代码目录不应当属于root用户（组）。否则会有这样的提示信息:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Refusing to use a gid of <span class="token number">0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果在VirtualBox中遇到了NAT的DNS问题:</p><p>Ubuntu 18.04 使用的是本地DNS缓存127.0.0.53，在容器中不会起效。因此Docker默认设置为 Google的8.8.8.8 DNS 服务器, 如果有防火墙设置可能会遇到问题。</p><p>Ubuntu 18.04中，<code>/etc/resolv.conf</code> 是一个符号链接 (<code>ls -l /etc/resolv.conf</code>)，指向 <code>/run/systemd/resolve/stub-resolv.conf</code> (127.0.0.53)</p><p>更改路径到 <code>/run/systemd/resolve/resolv.conf</code>, 它列出了实际使用的DNS服务器： .... sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf ....</p><p>查看并验证是否修改成功: <code>cat /etc/resolv.conf</code></p><p>另外，你也可以修改VirtualBox DNS: .... VBoxManage modifyvm &quot;VM name&quot; --natdnshostresolver1 on ....</p></div>',11),b={render:function(e,o){const n=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.iD)(r.HY,null,[s,(0,r._)("ul",null,[t,(0,r._)("li",null,[(0,r._)("p",null,[a,c,l,(0,r._)("a",d,[i,(0,r.Wm)(n)]),u])]),p]),h],64)}}}}]);